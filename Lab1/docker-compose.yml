version: '3.4'

services:
  lab1:
    container_name: Lab1    
    hostname: lab1
    image: ${DOCKER_REGISTRY-}lab1
    env_file: ./.env
    build:
      context: Lab1
      dockerfile: Dockerfile
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=https://+:443;http://+:80
        # Enable the agent
        - ENV CORECLR_ENABLE_PROFILING=1 
        - CORECLR_PROFILER={36032161-FFC0-4B61-B559-F6C5D41BAE5A} 
        - CORECLR_NEWRELIC_HOME=/usr/local/newrelic-dotnet-agent 
        - CORECLR_PROFILER_PATH=/usr/local/newrelic-dotnet-agent/libNewRelicProfiler.so 
        - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY} 
        - NEW_RELIC_APP_NAME="Lab1"
        - NEW_RELIC_REGION=eu
        - NEW_RELIC_LOG_LEVEL=debug
        - DefaultConnection=Server=LAPTOP-ROMAN;Database=UnivWebLab1DB;Trusted_Connection=True;TrustServerCertificate=true
    ports:
        - 8082:80
        - 8084:443
    depends_on:
        prometheus:
            condition: service_healthy
        grafana:
            condition: service_healthy
    
  grafana:
    container_name: lab1_grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
        - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
        prometheus:
            condition: service_healthy
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3000/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:9090/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s
  newrelic-infra:
    container_name: newrelic-infra
    image: newrelic/infrastructure:latest
    env_file: ./.env
    network_mode: host
    cap_add:
      - SYS_PTRACE
    privileged: true
    pid: host
    environment:
      - NRIA_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"




 
    
    



    